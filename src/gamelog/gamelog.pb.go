// Code generated by protoc-gen-go.
// source: gamelog.proto
// DO NOT EDIT!

/*
Package gamelog is a generated protocol buffer package.

It is generated from these files:
	gamelog.proto

It has these top-level messages:
	GameLog
	GameRecord
	PlayerRank
	Player
	PlayerStats
	Team
*/
package gamelog

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PlayerRank_LeagueType int32

const (
	PlayerRank_BRONZE   PlayerRank_LeagueType = 0
	PlayerRank_SILVER   PlayerRank_LeagueType = 1
	PlayerRank_GOLD     PlayerRank_LeagueType = 2
	PlayerRank_PLATINUM PlayerRank_LeagueType = 3
	PlayerRank_DIAMOND  PlayerRank_LeagueType = 4
)

var PlayerRank_LeagueType_name = map[int32]string{
	0: "BRONZE",
	1: "SILVER",
	2: "GOLD",
	3: "PLATINUM",
	4: "DIAMOND",
}
var PlayerRank_LeagueType_value = map[string]int32{
	"BRONZE":   0,
	"SILVER":   1,
	"GOLD":     2,
	"PLATINUM": 3,
	"DIAMOND":  4,
}

func (x PlayerRank_LeagueType) Enum() *PlayerRank_LeagueType {
	p := new(PlayerRank_LeagueType)
	*p = x
	return p
}
func (x PlayerRank_LeagueType) String() string {
	return proto.EnumName(PlayerRank_LeagueType_name, int32(x))
}
func (x *PlayerRank_LeagueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerRank_LeagueType_value, data, "PlayerRank_LeagueType")
	if err != nil {
		return err
	}
	*x = PlayerRank_LeagueType(value)
	return nil
}

type GameLog struct {
	Games            []*GameRecord `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	Updated          *uint64       `protobuf:"varint,2,opt,name=updated" json:"updated,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GameLog) Reset()         { *m = GameLog{} }
func (m *GameLog) String() string { return proto.CompactTextString(m) }
func (*GameLog) ProtoMessage()    {}

func (m *GameLog) GetGames() []*GameRecord {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *GameLog) GetUpdated() uint64 {
	if m != nil && m.Updated != nil {
		return *m.Updated
	}
	return 0
}

type GameRecord struct {
	Teams            []*Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration         *uint32 `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	LolkingId        *uint64 `protobuf:"varint,4,opt,name=lolking_id" json:"lolking_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameRecord) Reset()         { *m = GameRecord{} }
func (m *GameRecord) String() string { return proto.CompactTextString(m) }
func (*GameRecord) ProtoMessage()    {}

func (m *GameRecord) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *GameRecord) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *GameRecord) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *GameRecord) GetLolkingId() uint64 {
	if m != nil && m.LolkingId != nil {
		return *m.LolkingId
	}
	return 0
}

type PlayerRank struct {
	Level            *uint32                `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	League           *PlayerRank_LeagueType `protobuf:"varint,2,opt,name=league,enum=PlayerRank_LeagueType" json:"league,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PlayerRank) Reset()         { *m = PlayerRank{} }
func (m *PlayerRank) String() string { return proto.CompactTextString(m) }
func (*PlayerRank) ProtoMessage()    {}

func (m *PlayerRank) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerRank) GetLeague() PlayerRank_LeagueType {
	if m != nil && m.League != nil {
		return *m.League
	}
	return PlayerRank_BRONZE
}

type Player struct {
	Name             *string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PlayerId         *uint64     `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	Ranking          *PlayerRank `protobuf:"bytes,3,opt,name=ranking" json:"ranking,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}

func (m *Player) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Player) GetPlayerId() uint64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *Player) GetRanking() *PlayerRank {
	if m != nil {
		return m.Ranking
	}
	return nil
}

type PlayerStats struct {
	Player           *Player `protobuf:"bytes,1,opt,name=player" json:"player,omitempty"`
	Kills            *uint32 `protobuf:"varint,2,opt,name=kills" json:"kills,omitempty"`
	Deaths           *uint32 `protobuf:"varint,3,opt,name=deaths" json:"deaths,omitempty"`
	Assists          *uint32 `protobuf:"varint,4,opt,name=assists" json:"assists,omitempty"`
	Gold             *uint32 `protobuf:"varint,5,opt,name=gold" json:"gold,omitempty"`
	Minions          *uint32 `protobuf:"varint,6,opt,name=minions" json:"minions,omitempty"`
	Champion         *string `protobuf:"bytes,7,opt,name=champion" json:"champion,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerStats) Reset()         { *m = PlayerStats{} }
func (m *PlayerStats) String() string { return proto.CompactTextString(m) }
func (*PlayerStats) ProtoMessage()    {}

func (m *PlayerStats) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *PlayerStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *PlayerStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *PlayerStats) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *PlayerStats) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *PlayerStats) GetMinions() uint32 {
	if m != nil && m.Minions != nil {
		return *m.Minions
	}
	return 0
}

func (m *PlayerStats) GetChampion() string {
	if m != nil && m.Champion != nil {
		return *m.Champion
	}
	return ""
}

type Team struct {
	Players          []*PlayerStats `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	Victory          *bool          `protobuf:"varint,2,opt,name=victory" json:"victory,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}

func (m *Team) GetPlayers() []*PlayerStats {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Team) GetVictory() bool {
	if m != nil && m.Victory != nil {
		return *m.Victory
	}
	return false
}

func init() {
	proto.RegisterEnum("PlayerRank_LeagueType", PlayerRank_LeagueType_name, PlayerRank_LeagueType_value)
}
