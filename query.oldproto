package proto;

import "champions.proto";

// A query that identifies two teams and the outcome state.
//
// Of the games that include these team compositions, how many of them
// resulted in wins for "winners" and losses for "losers"?
message GameQuery {
	optional uint64 query_process = 1;
	optional uint64 query_id = 2;
	repeated ChampionType winners = 3;
	repeated ChampionType losers = 4;
}

message QueryResponse {
	message Benchmark {
		optional uint32 segment = 1;
		optional double timing = 2;
	}
	
	message ExploratoryChampionSubquery {
		optional ChampionType explorer = 1;
		optional Results results = 2;
		optional bool valid = 3;
	}
	
	message Results {
		// The total number of events reviewed.
		optional uint32 total = 1;
	
		// The number of events that contain the requested team compositions
		// (the denominator).
		optional uint32 available = 2;
	
		// The number of events that contain the team compositions with the
		// desired outcome (the numerator).
		optional uint32 matching = 3;
	}
	
	// Marks whether the query completed successfully.
	optional bool successful = 1;
	repeated Benchmark timing = 2;
	optional Results results = 3;
	
	repeated ExploratoryChampionSubquery next_champ = 4;
}
